#ifndef SIGNALS_HPP
#define SIGNALS_HPP

#include "qpcpp.hpp"


namespace AC
{

enum ArenaControllerSignals
{
  // commands from serial or ethernet interface
  DEACTIVATE_DISPLAY_SIG = QP::Q_USER_SIG,
  FRAME_FILLED_SIG,
  FRAME_TRANSFERRED_SIG,
  DISPLAY_PATTERN_SIG,

  SERIAL_COMMAND_AVAILABLE_SIG,
  ETHERNET_COMMAND_AVAILABLE_SIG,
  PROCESS_BINARY_COMMAND_SIG,
  PROCESS_STRING_COMMAND_SIG,
  PROCESS_STREAM_COMMAND_SIG,
  COMMAND_PROCESSED_SIG,
  PATTERN_FINISHED_DISPLAYING_SIG,

  MAX_PUB_SIG, // the last published signal

  // POST to Arena
  ALL_ON_SIG,
  ALL_OFF_SIG,
  STREAM_FRAME_SIG,
  INITIALIZE_ANALOG_TIMEOUT_SIG,

  // POST to SerialCommandInterface
  SERIAL_TIMEOUT_SIG,
  ACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,
  DEACTIVATE_SERIAL_COMMAND_INTERFACE_SIG,
  SERIAL_INITIALIZED_SIG,

  // POST to EthernetCommandInterface
  ETHERNET_TIMEOUT_SIG,
  ACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
  DEACTIVATE_ETHERNET_COMMAND_INTERFACE_SIG,
  ETHERNET_INITIALIZED_SIG,
  ETHERNET_SERVER_CONNECTED_SIG,

  // POST to Display
  DISPLAY_FRAME_SIG,
  REFRESH_TIMEOUT_SIG,
  SET_REFRESH_RATE_SIG,

  // POST to Frame
  TRANSFER_FRAME_SIG,
  PANEL_SET_TRANSFERRED_SIG,
  FILL_FRAME_BUFFER_WITH_ALL_ON_SIG,
  FILL_FRAME_BUFFER_WITH_DECODED_FRAME_SIG,
  SWITCH_GRAYSCALE_SIG,

  // POST to Watchdog
  WATCHDOG_TIMEOUT_SIG,
  RESET_SIG,

  // POST to Pattern
  FRAME_RATE_TIMEOUT_SIG,
  RUNTIME_DURATION_TIMEOUT_SIG,
  INITIALIZE_CARD_TIMEOUT_SIG,
  BEGIN_DISPLAYING_PATTERN_SIG,
  END_DISPLAYING_PATTERN_SIG,
  CARD_FOUND_SIG,
  CARD_NOT_FOUND_SIG,
  FILE_VALID_SIG,
  FILE_NOT_VALID_SIG,
  PATTERN_VALID_SIG,
  PATTERN_NOT_VALID_SIG,
  FRAME_READ_FROM_FILE_SIG,
  FRAME_DECODED_SIG,

  // dispatched to Analog
  INITIALIZE_ANALOG_SIG,
  ANALOG_INITIALIZED_SIG,
  SET_ANALOG_OUTPUT_SIG,

  MAX_SIG // the last signal
};

} // namespace AC

#endif // SIGNALS_HPP
