//$file${.::EthernetCommandInterface.hpp} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
//
// Model: ArenaController.qm
// File:  ${.::EthernetCommandInterface.hpp}
//
// This code has been generated by QM 5.2.3 <www.state-machine.com/qm>.
// DO NOT EDIT THIS FILE MANUALLY. All your changes will be lost.
//
// SPDX-License-Identifier: GPL-3.0-or-later
//
// This generated code is open source software: you can redistribute it under
// the terms of the GNU General Public License as published by the Free
// Software Foundation.
//
// This code is distributed in the hope that it will be useful, but WITHOUT
// ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
// FITNESS FOR A PARTICULAR PURPOSE. See the GNU General Public License for
// more details.
//
// NOTE:
// Alternatively, this generated code may be distributed under the terms
// of Quantum Leaps commercial licenses, which expressly supersede the GNU
// General Public License and are specifically designed for licensees
// interested in retaining the proprietary status of their code.
//
// Contact information:
// <www.state-machine.com/licensing>
// <info@state-machine.com>
//
//$endhead${.::EthernetCommandInterface.hpp} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
#ifndef ETHERNET_COMMAND_INTERFACE_HPP
#define ETHERNET_COMMAND_INTERFACE_HPP

#include "Shared.hpp"
#include "Events.hpp"
#include "fsp.hpp"


//============================================================================
// generate declaration of the active object
//$declare${AOs::EthernetCommandInterface} vvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvvv
namespace AC {

//${AOs::EthernetCommandInterface} ...........................................
class EthernetCommandInterface : public QP::QActive {
public:
    static EthernetCommandInterface instance;
    QP::QTimeEvt ethernet_time_evt_;
    std::uint8_t binary_response_[constants::byte_count_per_response_max];
    std::uint8_t binary_response_byte_count_;
    void * connection_;
    std::uint8_t const * binary_command_;
    std::uint32_t binary_command_byte_count_;
    std::uint32_t binary_command_byte_count_claim_;
    std::uint16_t runtime_duration_ms_;

public:
    EthernetCommandInterface();

protected:
    Q_STATE_DECL(initial);
    Q_STATE_DECL(Inactive);
    Q_STATE_DECL(Active);
    Q_STATE_DECL(Unintitalized);
    Q_STATE_DECL(WaitingForNewCommand);
    Q_STATE_DECL(DisplayingPattern);
    Q_STATE_DECL(CreatingServerConnection);
    Q_STATE_DECL(Waiting);
    Q_STATE_DECL(ProcessingBinaryCommand);
    Q_STATE_DECL(ChoosingCommandProcessor);
    Q_STATE_DECL(ProcessingStreamCommand);
}; // class EthernetCommandInterface

} // namespace AC
//$enddecl${AOs::EthernetCommandInterface} ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

#endif
